# -*- coding:utf-8 -*-
__author__ = 'Qiushi Huang'


"""
互斥锁的工作原理：将并行变为串行。

互斥锁使用要点：保护不同的数据，就必须加不同的锁。
              互斥锁的精髓是局部修改，只针对共享数据修改为串行  
"""
"""
GIL全局解释器锁（global interpreter lock）：本质仍是一把互斥锁，和上面总结的互斥锁的使用要点类似。把同时运行的多个线程，变为一个一个执行，保证数据安全

windows系统查看进程：tasklist | findstr python   对应的linux查看方式：ps aux| grep test

启动一个Python文件，就会启动一个python解释器的进程。
运行一个python程序有几步：
    1、启动解释器进程
    2、下属线程执行python代码，字符串代码要使用解释器进程内功能执行
    3、启动解释器垃圾回收线程
    4、垃圾回收线程和Python代码执行线程，都需要抢夺解释器进程内功能，为了避免出现数据混乱，给解释器进程添加互斥锁，也就是GIL全局解释器。有了之后让垃圾回收机制变得安全。
    
GIL全局解释器锁导致的问题：对CPython解释器来说，每启动一个进程，这个进程内的多个线程，同一时间只能有一个出来运行。无法利用多核优势 （但可以通过多进程来实现多核）。

垃圾回收线程是不是一直存在？
    不是，是cPython解释器定期去销毁。
"""